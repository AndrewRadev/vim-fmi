@mixin button {
  background-color: $button-color;
  border-radius: 4px;
  border: none;
  color: black;
  cursor: pointer;
  display: inline-block;
  font-family: Verdana, Geneva, "Bitstream Vera Sans", Helvetica, sans-serif;
  font-size: 13px;
  font-weight: normal;
  padding: 8px 16px;
  text-align: center;

  &:hover { background-color: $subtitle-color; color: white; text-decoration: none; }

  @include mobile-only {
    display: block;
    margin-top: 5px;
    padding: 13px 16px;
    width: 100%;
  }
}

@mixin primary-button {
  @include button;

  background-color: $subtitle-color;
  color: white;

  &:hover { background-color: darken($subtitle-color, 10%); text-decoration: none; }
}

@mixin copy-button {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;

  // Styles mostly taken from github:
  background-color: #f6f8fa;
  border: 1px solid rgba(27, 31, 36, 0.15);
  border-radius: 6px;
  box-shadow: 0 1 px 0 rgba(27, 31, 36, 0.04), inset 0 1 px 0 rgba(255, 255, 255, 0.25);
  padding: 5px 10px;

  &:hover {
    background-color: #f3f4f6;
  }

  &.small {
    background-color: transparent;
    padding: 0;
    border: 0;
    top: 2px;
    right: 2px;
  }
}

@mixin replace-with-image($img, $width, $height) {
  background: { image: url($img); repeat: no-repeat; }
  overflow: hidden;
  text: { align: left; indent: -9999px; }
  width: $width;
  height: $height;
}

@mixin monospace {
  font-family: $font-monospace;
  font-size: $font-monospace-size;
}

@mixin heading-1 { color: $title-color; font-family: $font-headings; font-size: $font-huge; line-height: $font-huge * 1.2; }
@mixin heading-2 { color: $subtitle-color; font-family: $font-headings; font-size: $font-larger; }
@mixin heading-3 { color: $subtitle-color; font-family: $font-headings; font-size: $font-large; }

@mixin data-table {
  border-collapse: separate;
  border-spacing: 1px;

  > thead > tr > th:first-child { border-top-left-radius: 5px; }
  > thead > tr > th:last-child  { border-top-right-radius: 5px; }
  > tbody > tr:last-child > td:first-child { border-bottom-left-radius: 5px; }
  > tbody > tr:last-child > td:last-child  { border-bottom-right-radius: 5px; }

  margin: 20px 0;
  width: 100%;

  caption { color: $main-color; font-size: $font-large; font-weight: bold; padding: 10px 0; text-align: left; }
  thead th { background-color: $main-color; color: white; font-weight: bold; text-align: left; }
  th, td { padding: 8px 16px; vertical-align: middle; }
  tr:nth-child(even) { background-color: $light-gray; }
  tr:hover { background-color: $gray; }
  td.no-records { text-align: center; }

  tr.hidden                     { opacity: 0.3; }
  tr.active  > td:first-child a { border-left: 3px solid $green;  }
  tr.warning > td:first-child a { border-left: 3px solid $orange; }

  td.fixed-width {
    font-family: monospace;
  }
}

@mixin link-table-cell($padding: 10px) {
  padding: 0;

  a { display: block; padding: $padding; }
  a:hover { text-decoration: none; }
}

@mixin test-results {
  ul li { background: { position: 0 0; repeat: no-repeat; } list-style: none; padding-left: 25px; }
  ul li.test-points { background-image: url('icons/emoticon_grin.png'); }
  ul li.bonus { background-image: url('icons/star.png'); }
  ul li.penalty { background-image: url('icons/stop.png'); }
  ul li.total-points { background-image: url('icons/bullet_go.png'); }
  ul li.passed-tests { background-image: url('icons/flag_green.png'); }
  ul li.failed-tests { background-image: url('icons/flag_red.png'); }
  ul li.unchecked { background-image: url('icons/time.png'); }
  ul li.correct { background-image: url('icons/tick.png'); }
  ul li.incorrect { background-image: url('icons/cross.png'); }
}

@mixin markdown {
  code { background-color: #f8f8ff; color: #444; padding: 1px 3px; border: 1px solid #dedede; border-radius: 2px; }
  pre code { display: block; overflow-x: auto; }
}

@mixin no-selection { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }

@mixin clear-after {
  &::after { display: block; content: ' '; clear: both; }
}

@mixin transform($value) { -webkit-transform: $value; transform: $value; }

@mixin mobile-only {
  @media (max-width: $mobile-width) {
    @content;
  }
}
